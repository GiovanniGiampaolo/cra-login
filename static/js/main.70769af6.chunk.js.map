{"version":3,"sources":["constants.js","components/Profile.js","components/ComposeForm.js","components/Preview.js","components/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["STATIC_AUTH_BODY","username","password","TOTTI_TEXT","ProfileComponent","props","Fragment","Typography","variant","className","Button","onClick","sessionStorage","removeItem","setUserAuth","style","backgroundColor","color","to","GotoProfile","fullWidth","EXAMPLE_OBJ_PREW","title","description","ComposeForm","initialValues","onSubmit","values","window","setItem","JSON","stringify","open","display","flexDirection","alignItems","handleSubmit","TextField","id","name","label","value","onChange","handleChange","multiline","placeholder","type","Preview","useState","prev","setPrev","useEffect","getItem","parse","close","LoginForm","App","isUserAutherticated","isPreviweMode","setPreviewMode","jwt","setJwt","console","log","Card","maxWidth","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70769af6.chunk.js","sourcesContent":["export const IS_DEV_MODE = true\r\n\r\nexport const STATIC_AUTH_BODY = {\r\n    username: 'superadmin@dstech.it',\r\n    password: 'password123'\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport {Link} from 'react-router-dom'\r\nimport {IS_DEV_MODE} from '../constants'\r\n\r\nexport const TOTTI_TEXT = 'Francesco Totti nasce a Roma il 27 settembre 1976. Dimostra sin da piccolo grande confidenza con la sfera di cuoio. La sua prima squadra è la Fortitudo, piccola società del quartiere San Giovanni, dove vive la famiglia. Dalla Fortitudo di Trillò, Francesco passa alla Smit Trastevere, alla corte di Pergolati e Paolucci.'\r\n\r\nexport function ProfileComponent(props) {\r\n\r\n    const handleLogOut = () => {\r\n        sessionStorage.removeItem('Jwt')\r\n\r\n        IS_DEV_MODE && props.setUserAuth(false)\r\n    }\r\n\r\n    return <React.Fragment>\r\n\r\n        <Typography variant={'h5'}\r\n                    className=\"col-12 text-center pb-4 font-weight-bold\">\r\n            Benvenuto nel tuo profilo!\r\n        </Typography>\r\n\r\n        {/* USER DESC */}\r\n        <Typography className=\"col-12 mb-4 text-justify\" variant={'body1'}>\r\n            {TOTTI_TEXT}\r\n        </Typography>\r\n\r\n        {/* ACTIONS */}\r\n        <div className=\"d-flex flex-column align-items-center justify-content-center\">\r\n            <Button onClick={handleLogOut}\r\n                    className=\"col-6 mb-2\"\r\n                    style={{\r\n                        backgroundColor: '#bf3535',\r\n                        color: 'white'\r\n                    }}>Logout\r\n            </Button>\r\n\r\n            {/* GO TO COMPOSE */}\r\n            <Button className=\"col-6\"\r\n                    style={{backgroundColor: '#d67b1f', color: 'white'}}>\r\n                <Link className={'link-no-style'} to={'/compose'}>Compose</Link>\r\n            </Button>\r\n        </div>\r\n\r\n    </React.Fragment>\r\n}\r\n\r\nexport function GotoProfile() {\r\n    return <div className=\"d-flex flex-column align-items-center justify-items-center\">\r\n        {/* TIPS */}\r\n        <Typography className=\"col-12 mb-2 text-justify\" variant={'body1'}>\r\n            Devi loggarti per vedere questa porzione\r\n        </Typography>\r\n\r\n        {/* ACTION */}\r\n        <Link to={'/'}>\r\n            <Button fullWidth style={{backgroundColor: '#bf3535', color: 'white'}}>\r\n                Back to Login\r\n            </Button>\r\n        </Link>\r\n    </div>\r\n}\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport {TOTTI_TEXT} from './Profile'\r\nimport {Formik} from 'formik'\r\nimport {Link} from 'react-router-dom'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst EXAMPLE_OBJ_PREW = {\r\n    title: 'Il Capitano',\r\n    description: TOTTI_TEXT\r\n}\r\n\r\nexport function ComposeForm() {\r\n\r\n    const handlePreview = (values) => {\r\n        window.sessionStorage.setItem('preview', JSON.stringify(values))\r\n        window.open('/preview', '_blank')\r\n    }\r\n\r\n    return <React.Fragment>\r\n\r\n        <Typography className=\"col-12 mb-4 font-weight-bold\" variant={'h5'}>Genera la tua pagina\r\n            dinamicamente</Typography>\r\n\r\n        <Formik initialValues={EXAMPLE_OBJ_PREW}\r\n                onSubmit={handlePreview}\r\n        >\r\n            {props => (<form style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}\r\n                             onSubmit={props.handleSubmit}>\r\n\r\n                {/* TITLE */}\r\n                <TextField\r\n                    className=\"col-8 mb-4\"\r\n                    variant={'outlined'}\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    label=\"Title\"\r\n                    value={props.values.title}\r\n                    onChange={props.handleChange}\r\n                />\r\n\r\n                {/* SUBTITLE */}\r\n                <TextField\r\n                    className=\"col-12 mb-4\"\r\n                    variant={'outlined'}\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    label=\"Dynamic text\"\r\n                    multiline\r\n                    placeholder={'Write here text'}\r\n                    value={props.values.description}\r\n                    onChange={props.handleChange}\r\n                />\r\n\r\n                {/* SUBMIT */}\r\n                <Button className=\"col-8 mb-2\"\r\n                        color=\"primary\" variant=\"contained\" type=\"submit\">\r\n                    Preview\r\n                </Button>\r\n\r\n                {/* GO BACK TO PROFILE */}\r\n                <Button className=\"col-8\"\r\n                        color=\"secondary\" variant=\"contained\"\r\n                >\r\n                    <Link className={'link-no-style'} to=\"/profile\">Go back to profile</Link>\r\n                </Button>\r\n\r\n            </form>)}\r\n        </Formik>\r\n    </React.Fragment>\r\n}\r\n","import React from 'react'\r\nimport {useEffect, useState} from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nexport function Preview() {\r\n\r\n    const [prev, setPrev] = useState(null)\r\n\r\n    useEffect(() => {\r\n        var prev = window.sessionStorage.getItem('preview')\r\n\r\n        setPrev(JSON.parse(prev))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const handleGoBack = () => {\r\n        window.sessionStorage.removeItem('preview')\r\n        window.close()\r\n    }\r\n\r\n    return <React.Fragment>\r\n        {prev &&\r\n        <Typography className=\"col-12 font-weight-bold text-center mb-2\" variant={'h5'}>{prev.title}</Typography>}\r\n        {prev && <Typography className=\"col-12 mb-4 text-justify\" variant={'body1'}>{prev.description}</Typography>}\r\n\r\n        <div className=\"col-12 d-flex justify-content-center\">\r\n            <Button variant={'outlined'}\r\n                    onClick={handleGoBack}\r\n                    style={{backgroundColor: '#386dbe', color: 'white'}}>Go back</Button>\r\n        </div>\r\n\r\n    </React.Fragment>\r\n}\r\n","import React from 'react'\r\nimport {Formik} from 'formik'\r\nimport {IS_DEV_MODE, STATIC_AUTH_BODY} from '../constants'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst FORM_INIT_VALUES = {\r\n    username: '',\r\n    password: ''\r\n}\r\n\r\nexport function LoginForm(props) {\r\n\r\n    const fetchLogin = (values) => {\r\n\r\n        !IS_DEV_MODE ? fetch('http://8a81d609aa5e.ngrok.io/winner/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify(IS_DEV_MODE ? STATIC_AUTH_BODY : values),\r\n            headers: {\r\n                'Content-Type':\r\n                    'application/json'\r\n            }\r\n        })\r\n            .then(response => {\r\n                const res = response.json()\r\n\r\n                console.log(response.headers.get('Jwt'))\r\n                props.setJwt(response.headers.get('Jwt'))\r\n                props.setUserAuth(res)\r\n            }) : props.setUserAuth(true)\r\n    }\r\n\r\n\r\n    return <React.Fragment>\r\n\r\n        <Typography variant={'h5'}\r\n                    className=\"col-12 pb-4 text-center font-weight-bold\">\r\n            Login into our React app!\r\n        </Typography>\r\n\r\n        <Formik initialValues={IS_DEV_MODE ? STATIC_AUTH_BODY : FORM_INIT_VALUES}\r\n                onSubmit={fetchLogin}\r\n        >\r\n            {props => (<form style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}\r\n                             onSubmit={props.handleSubmit}>\r\n\r\n                {/* TITLE */}\r\n                <TextField\r\n                    className=\"col-8 pb-4\"\r\n                    variant={'outlined'}\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    label=\"Username\"\r\n                    value={props.values.username}\r\n                    onChange={props.handleChange}\r\n                />\r\n\r\n                {/* SUBTITLE */}\r\n                <TextField\r\n                    className=\"col-8 pb-4\"\r\n                    variant={'outlined'}\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    value={props.values.password}\r\n                    onChange={props.handleChange}\r\n                />\r\n\r\n                {/* SUBMIT */}\r\n                <Button color=\"primary\"\r\n                        className=\"col-6\"\r\n                        variant=\"contained\" type=\"submit\">\r\n                    login\r\n                </Button>\r\n\r\n\r\n            </form>)}\r\n        </Formik>\r\n\r\n    </React.Fragment>\r\n}\r\n","import React from 'react'\nimport './App.css'\nimport {BrowserRouter as Router, Link, Redirect, Route, Switch} from 'react-router-dom'\nimport {GotoProfile, ProfileComponent} from './components/Profile'\nimport {useEffect, useState} from 'react'\nimport {ComposeForm} from './components/ComposeForm'\nimport {Preview} from './components/Preview'\nimport {LoginForm} from './components/LoginForm'\nimport Card from '@material-ui/core/Card'\n\nfunction App() {\n\n    const [isUserAutherticated, setUserAuth] = useState(false)\n\n    const [isPreviweMode, setPreviewMode] = useState(false)\n\n    const [jwt, setJwt] = useState('no jwt')\n\n    useEffect(() => {\n        var prev = window.sessionStorage.getItem('preview')\n        prev && setPreviewMode(!isPreviweMode)\n        // eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n        console.log('isUserAutherticated =>', isUserAutherticated, jwt)\n    }, [isUserAutherticated, jwt])\n\n\n    return (\n        <React.Fragment>\n\n            {/* BASE ROUTING */}\n            <Router>\n                <div className=\"App\">\n                    <div className=\"row mb-5\">\n                        {/* REDIRECT TO LOGIN */}\n                        <Link className=\"col-md-6 col-12 align-content-center text-center link-no-style\" to=\"/\"><h2\n                            style={{color: 'white'}}>Login</h2>\n                        </Link>\n                        {/* REDIRECT TO HOME */}\n                        <Link className=\"col-md-6 col-12 align-content-center text-center link-no-style\" to=\"/profile\">\n                            <h2 style={{color: 'white'}}>Profile</h2>\n                        </Link>\n                    </div>\n\n                    <Card className=\"row container align-content-center justify-content-center flex-column p-5 w-auto\"\n                          style={{maxWidth: 600}}>\n                        <Switch>\n\n                            {/* ROUTE LOGIN */}\n                            <Route path={'/'} exact>\n                                <LoginForm setUserAuth={setUserAuth} setJwt={setJwt}/>\n                            </Route>\n\n                            {/* ROUTE PROFILE */}\n                            <Route path={'/profile'} exact>\n                                {isUserAutherticated ? <ProfileComponent setUserAuth={setUserAuth}/> : <GotoProfile/>}\n                            </Route>\n\n                            {/* COMPOSE FORM */}\n                            <Route path={'/compose'}>\n                                <ComposeForm/>\n                            </Route>\n\n                            {/* PREVIEW */}\n                            <Route path={'/preview'}>\n                                <Preview/>\n                            </Route>\n\n                            {/* REDIRECT AUTH */}\n                            {isUserAutherticated ? <Redirect to={'/profile'}/> : <Redirect to={'/'}/>}\n\n                            {/* ACCESS PREV MODE */}\n                            {isPreviweMode && <Redirect to={'/preview'}/>}\n\n                        </Switch>\n                    </Card>\n                </div>\n            </Router>\n        </React.Fragment>\n\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}